/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as ServiceImport } from './routes/$service'
import { Route as IndexImport } from './routes/index'
import { Route as ServiceIndexImport } from './routes/$service/index'
import { Route as ServiceDetailImport } from './routes/$service/detail'
import { Route as ServiceTeamsImport } from './routes/$service/_teams'
import { Route as ServiceTeamsTeamIdImport } from './routes/$service/_teams/$teamId'
import { Route as ServiceTeamsTeamIdIndexImport } from './routes/$service/_teams/$teamId/index'
import { Route as ServiceTeamsTeamIdReservationsImport } from './routes/$service/_teams/$teamId/reservations'
import { Route as ServiceTeamsTeamIdReservationsIndexImport } from './routes/$service/_teams/$teamId/reservations/index'
import { Route as ServiceTeamsTeamIdReservationsNewImport } from './routes/$service/_teams/$teamId_/reservations/new'
import { Route as ServiceTeamsTeamIdReservationsReservationidImport } from './routes/$service/_teams/$teamId_/reservations/$reservationid'
import { Route as ServiceTeamsTeamIdReservationsReservationIdEditImport } from './routes/$service/_teams/$teamId_/reservations/$reservationId/edit'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const ServiceRoute = ServiceImport.update({
  id: '/$service',
  path: '/$service',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ServiceIndexRoute = ServiceIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ServiceRoute,
} as any)

const ServiceDetailRoute = ServiceDetailImport.update({
  id: '/detail',
  path: '/detail',
  getParentRoute: () => ServiceRoute,
} as any)

const ServiceTeamsRoute = ServiceTeamsImport.update({
  id: '/_teams',
  getParentRoute: () => ServiceRoute,
} as any)

const ServiceTeamsTeamIdRoute = ServiceTeamsTeamIdImport.update({
  id: '/$teamId',
  path: '/$teamId',
  getParentRoute: () => ServiceTeamsRoute,
} as any)

const ServiceTeamsTeamIdIndexRoute = ServiceTeamsTeamIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ServiceTeamsTeamIdRoute,
} as any)

const ServiceTeamsTeamIdReservationsRoute =
  ServiceTeamsTeamIdReservationsImport.update({
    id: '/reservations',
    path: '/reservations',
    getParentRoute: () => ServiceTeamsTeamIdRoute,
  } as any)

const ServiceTeamsTeamIdReservationsIndexRoute =
  ServiceTeamsTeamIdReservationsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ServiceTeamsTeamIdReservationsRoute,
  } as any)

const ServiceTeamsTeamIdReservationsNewRoute =
  ServiceTeamsTeamIdReservationsNewImport.update({
    id: '/$teamId_/reservations/new',
    path: '/$teamId/reservations/new',
    getParentRoute: () => ServiceTeamsRoute,
  } as any)

const ServiceTeamsTeamIdReservationsReservationidRoute =
  ServiceTeamsTeamIdReservationsReservationidImport.update({
    id: '/$teamId_/reservations/$reservationid',
    path: '/$teamId/reservations/$reservationid',
    getParentRoute: () => ServiceTeamsRoute,
  } as any)

const ServiceTeamsTeamIdReservationsReservationIdEditRoute =
  ServiceTeamsTeamIdReservationsReservationIdEditImport.update({
    id: '/$teamId_/reservations/$reservationId/edit',
    path: '/$teamId/reservations/$reservationId/edit',
    getParentRoute: () => ServiceTeamsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$service': {
      id: '/$service'
      path: '/$service'
      fullPath: '/$service'
      preLoaderRoute: typeof ServiceImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/$service/_teams': {
      id: '/$service/_teams'
      path: ''
      fullPath: '/$service'
      preLoaderRoute: typeof ServiceTeamsImport
      parentRoute: typeof ServiceImport
    }
    '/$service/detail': {
      id: '/$service/detail'
      path: '/detail'
      fullPath: '/$service/detail'
      preLoaderRoute: typeof ServiceDetailImport
      parentRoute: typeof ServiceImport
    }
    '/$service/': {
      id: '/$service/'
      path: '/'
      fullPath: '/$service/'
      preLoaderRoute: typeof ServiceIndexImport
      parentRoute: typeof ServiceImport
    }
    '/$service/_teams/$teamId': {
      id: '/$service/_teams/$teamId'
      path: '/$teamId'
      fullPath: '/$service/$teamId'
      preLoaderRoute: typeof ServiceTeamsTeamIdImport
      parentRoute: typeof ServiceTeamsImport
    }
    '/$service/_teams/$teamId/reservations': {
      id: '/$service/_teams/$teamId/reservations'
      path: '/reservations'
      fullPath: '/$service/$teamId/reservations'
      preLoaderRoute: typeof ServiceTeamsTeamIdReservationsImport
      parentRoute: typeof ServiceTeamsTeamIdImport
    }
    '/$service/_teams/$teamId/': {
      id: '/$service/_teams/$teamId/'
      path: '/'
      fullPath: '/$service/$teamId/'
      preLoaderRoute: typeof ServiceTeamsTeamIdIndexImport
      parentRoute: typeof ServiceTeamsTeamIdImport
    }
    '/$service/_teams/$teamId_/reservations/$reservationid': {
      id: '/$service/_teams/$teamId_/reservations/$reservationid'
      path: '/$teamId/reservations/$reservationid'
      fullPath: '/$service/$teamId/reservations/$reservationid'
      preLoaderRoute: typeof ServiceTeamsTeamIdReservationsReservationidImport
      parentRoute: typeof ServiceTeamsImport
    }
    '/$service/_teams/$teamId_/reservations/new': {
      id: '/$service/_teams/$teamId_/reservations/new'
      path: '/$teamId/reservations/new'
      fullPath: '/$service/$teamId/reservations/new'
      preLoaderRoute: typeof ServiceTeamsTeamIdReservationsNewImport
      parentRoute: typeof ServiceTeamsImport
    }
    '/$service/_teams/$teamId/reservations/': {
      id: '/$service/_teams/$teamId/reservations/'
      path: '/'
      fullPath: '/$service/$teamId/reservations/'
      preLoaderRoute: typeof ServiceTeamsTeamIdReservationsIndexImport
      parentRoute: typeof ServiceTeamsTeamIdReservationsImport
    }
    '/$service/_teams/$teamId_/reservations/$reservationId/edit': {
      id: '/$service/_teams/$teamId_/reservations/$reservationId/edit'
      path: '/$teamId/reservations/$reservationId/edit'
      fullPath: '/$service/$teamId/reservations/$reservationId/edit'
      preLoaderRoute: typeof ServiceTeamsTeamIdReservationsReservationIdEditImport
      parentRoute: typeof ServiceTeamsImport
    }
  }
}

// Create and export the route tree

interface ServiceTeamsTeamIdReservationsRouteChildren {
  ServiceTeamsTeamIdReservationsIndexRoute: typeof ServiceTeamsTeamIdReservationsIndexRoute
}

const ServiceTeamsTeamIdReservationsRouteChildren: ServiceTeamsTeamIdReservationsRouteChildren =
  {
    ServiceTeamsTeamIdReservationsIndexRoute:
      ServiceTeamsTeamIdReservationsIndexRoute,
  }

const ServiceTeamsTeamIdReservationsRouteWithChildren =
  ServiceTeamsTeamIdReservationsRoute._addFileChildren(
    ServiceTeamsTeamIdReservationsRouteChildren,
  )

interface ServiceTeamsTeamIdRouteChildren {
  ServiceTeamsTeamIdReservationsRoute: typeof ServiceTeamsTeamIdReservationsRouteWithChildren
  ServiceTeamsTeamIdIndexRoute: typeof ServiceTeamsTeamIdIndexRoute
}

const ServiceTeamsTeamIdRouteChildren: ServiceTeamsTeamIdRouteChildren = {
  ServiceTeamsTeamIdReservationsRoute:
    ServiceTeamsTeamIdReservationsRouteWithChildren,
  ServiceTeamsTeamIdIndexRoute: ServiceTeamsTeamIdIndexRoute,
}

const ServiceTeamsTeamIdRouteWithChildren =
  ServiceTeamsTeamIdRoute._addFileChildren(ServiceTeamsTeamIdRouteChildren)

interface ServiceTeamsRouteChildren {
  ServiceTeamsTeamIdRoute: typeof ServiceTeamsTeamIdRouteWithChildren
  ServiceTeamsTeamIdReservationsReservationidRoute: typeof ServiceTeamsTeamIdReservationsReservationidRoute
  ServiceTeamsTeamIdReservationsNewRoute: typeof ServiceTeamsTeamIdReservationsNewRoute
  ServiceTeamsTeamIdReservationsReservationIdEditRoute: typeof ServiceTeamsTeamIdReservationsReservationIdEditRoute
}

const ServiceTeamsRouteChildren: ServiceTeamsRouteChildren = {
  ServiceTeamsTeamIdRoute: ServiceTeamsTeamIdRouteWithChildren,
  ServiceTeamsTeamIdReservationsReservationidRoute:
    ServiceTeamsTeamIdReservationsReservationidRoute,
  ServiceTeamsTeamIdReservationsNewRoute:
    ServiceTeamsTeamIdReservationsNewRoute,
  ServiceTeamsTeamIdReservationsReservationIdEditRoute:
    ServiceTeamsTeamIdReservationsReservationIdEditRoute,
}

const ServiceTeamsRouteWithChildren = ServiceTeamsRoute._addFileChildren(
  ServiceTeamsRouteChildren,
)

interface ServiceRouteChildren {
  ServiceTeamsRoute: typeof ServiceTeamsRouteWithChildren
  ServiceDetailRoute: typeof ServiceDetailRoute
  ServiceIndexRoute: typeof ServiceIndexRoute
}

const ServiceRouteChildren: ServiceRouteChildren = {
  ServiceTeamsRoute: ServiceTeamsRouteWithChildren,
  ServiceDetailRoute: ServiceDetailRoute,
  ServiceIndexRoute: ServiceIndexRoute,
}

const ServiceRouteWithChildren =
  ServiceRoute._addFileChildren(ServiceRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$service': typeof ServiceTeamsRouteWithChildren
  '/about': typeof AboutRoute
  '/$service/detail': typeof ServiceDetailRoute
  '/$service/': typeof ServiceIndexRoute
  '/$service/$teamId': typeof ServiceTeamsTeamIdRouteWithChildren
  '/$service/$teamId/reservations': typeof ServiceTeamsTeamIdReservationsRouteWithChildren
  '/$service/$teamId/': typeof ServiceTeamsTeamIdIndexRoute
  '/$service/$teamId/reservations/$reservationid': typeof ServiceTeamsTeamIdReservationsReservationidRoute
  '/$service/$teamId/reservations/new': typeof ServiceTeamsTeamIdReservationsNewRoute
  '/$service/$teamId/reservations/': typeof ServiceTeamsTeamIdReservationsIndexRoute
  '/$service/$teamId/reservations/$reservationId/edit': typeof ServiceTeamsTeamIdReservationsReservationIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/$service': typeof ServiceIndexRoute
  '/$service/detail': typeof ServiceDetailRoute
  '/$service/$teamId': typeof ServiceTeamsTeamIdIndexRoute
  '/$service/$teamId/reservations/$reservationid': typeof ServiceTeamsTeamIdReservationsReservationidRoute
  '/$service/$teamId/reservations/new': typeof ServiceTeamsTeamIdReservationsNewRoute
  '/$service/$teamId/reservations': typeof ServiceTeamsTeamIdReservationsIndexRoute
  '/$service/$teamId/reservations/$reservationId/edit': typeof ServiceTeamsTeamIdReservationsReservationIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$service': typeof ServiceRouteWithChildren
  '/about': typeof AboutRoute
  '/$service/_teams': typeof ServiceTeamsRouteWithChildren
  '/$service/detail': typeof ServiceDetailRoute
  '/$service/': typeof ServiceIndexRoute
  '/$service/_teams/$teamId': typeof ServiceTeamsTeamIdRouteWithChildren
  '/$service/_teams/$teamId/reservations': typeof ServiceTeamsTeamIdReservationsRouteWithChildren
  '/$service/_teams/$teamId/': typeof ServiceTeamsTeamIdIndexRoute
  '/$service/_teams/$teamId_/reservations/$reservationid': typeof ServiceTeamsTeamIdReservationsReservationidRoute
  '/$service/_teams/$teamId_/reservations/new': typeof ServiceTeamsTeamIdReservationsNewRoute
  '/$service/_teams/$teamId/reservations/': typeof ServiceTeamsTeamIdReservationsIndexRoute
  '/$service/_teams/$teamId_/reservations/$reservationId/edit': typeof ServiceTeamsTeamIdReservationsReservationIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$service'
    | '/about'
    | '/$service/detail'
    | '/$service/'
    | '/$service/$teamId'
    | '/$service/$teamId/reservations'
    | '/$service/$teamId/'
    | '/$service/$teamId/reservations/$reservationid'
    | '/$service/$teamId/reservations/new'
    | '/$service/$teamId/reservations/'
    | '/$service/$teamId/reservations/$reservationId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/$service'
    | '/$service/detail'
    | '/$service/$teamId'
    | '/$service/$teamId/reservations/$reservationid'
    | '/$service/$teamId/reservations/new'
    | '/$service/$teamId/reservations'
    | '/$service/$teamId/reservations/$reservationId/edit'
  id:
    | '__root__'
    | '/'
    | '/$service'
    | '/about'
    | '/$service/_teams'
    | '/$service/detail'
    | '/$service/'
    | '/$service/_teams/$teamId'
    | '/$service/_teams/$teamId/reservations'
    | '/$service/_teams/$teamId/'
    | '/$service/_teams/$teamId_/reservations/$reservationid'
    | '/$service/_teams/$teamId_/reservations/new'
    | '/$service/_teams/$teamId/reservations/'
    | '/$service/_teams/$teamId_/reservations/$reservationId/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ServiceRoute: typeof ServiceRouteWithChildren
  AboutRoute: typeof AboutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ServiceRoute: ServiceRouteWithChildren,
  AboutRoute: AboutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$service",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$service": {
      "filePath": "$service.tsx",
      "children": [
        "/$service/_teams",
        "/$service/detail",
        "/$service/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/$service/_teams": {
      "filePath": "$service/_teams.tsx",
      "parent": "/$service",
      "children": [
        "/$service/_teams/$teamId",
        "/$service/_teams/$teamId_/reservations/$reservationid",
        "/$service/_teams/$teamId_/reservations/new",
        "/$service/_teams/$teamId_/reservations/$reservationId/edit"
      ]
    },
    "/$service/detail": {
      "filePath": "$service/detail.tsx",
      "parent": "/$service"
    },
    "/$service/": {
      "filePath": "$service/index.tsx",
      "parent": "/$service"
    },
    "/$service/_teams/$teamId": {
      "filePath": "$service/_teams/$teamId.tsx",
      "parent": "/$service/_teams",
      "children": [
        "/$service/_teams/$teamId/reservations",
        "/$service/_teams/$teamId/"
      ]
    },
    "/$service/_teams/$teamId/reservations": {
      "filePath": "$service/_teams/$teamId/reservations.tsx",
      "parent": "/$service/_teams/$teamId",
      "children": [
        "/$service/_teams/$teamId/reservations/"
      ]
    },
    "/$service/_teams/$teamId/": {
      "filePath": "$service/_teams/$teamId/index.tsx",
      "parent": "/$service/_teams/$teamId"
    },
    "/$service/_teams/$teamId_/reservations/$reservationid": {
      "filePath": "$service/_teams/$teamId_/reservations/$reservationid.tsx",
      "parent": "/$service/_teams"
    },
    "/$service/_teams/$teamId_/reservations/new": {
      "filePath": "$service/_teams/$teamId_/reservations/new.tsx",
      "parent": "/$service/_teams"
    },
    "/$service/_teams/$teamId/reservations/": {
      "filePath": "$service/_teams/$teamId/reservations/index.tsx",
      "parent": "/$service/_teams/$teamId/reservations"
    },
    "/$service/_teams/$teamId_/reservations/$reservationId/edit": {
      "filePath": "$service/_teams/$teamId_/reservations/$reservationId/edit.tsx",
      "parent": "/$service/_teams"
    }
  }
}
ROUTE_MANIFEST_END */
